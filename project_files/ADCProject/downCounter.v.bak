module down_counter #(parameter NUM_BITS) (
	
	input  wire                    clk,
	input  wire                    reset_n,
	input  wire [NUM_BITS - 1 : 0] count_from,
	output reg  [NUM_BITS - 1 : 0] count_val

);

always @(posedge(clk), negedge(reset_n)) begin

	if (!reset_n)
		count_val <= count_from;
	
	else if (count_val == {NUM_BITS{1'b0}})
		count_val <= {NUM_BITS{1'b0}};

	else
		count_val <= count_val - 1'b1;

end

endmodule
