|hdmi_init
select => select.IN1
reset_toggle => reset_toggle.IN1
reset_not => always0.IN0
clk_ref => clk_ref.IN1
hdmi_tx_int => ~NO_FANOUT~
state_out[0] << state_out.DB_MAX_OUTPUT_PORT_TYPE
state_out[1] << state_out.DB_MAX_OUTPUT_PORT_TYPE
state_out[2] << state_out.DB_MAX_OUTPUT_PORT_TYPE
state_out[3] << state_out.DB_MAX_OUTPUT_PORT_TYPE
clk_100hz_out << i2c_clk_divider:clk_divider.i2c_clk
ready_out << i2c_controller:i2c.ready_out
reset_out << reset.DB_MAX_OUTPUT_PORT_TYPE
i2c_states[0] << i2c_controller:i2c.states[0]
i2c_states[1] << i2c_controller:i2c.states[1]
i2c_states[2] << i2c_controller:i2c.states[2]
i2c_states[3] << i2c_controller:i2c.states[3]
i2c_states[4] << i2c_controller:i2c.states[4]
i2c_states[5] << i2c_controller:i2c.states[5]
i2c_states[6] << i2c_controller:i2c.states[6]
i2c_states[7] << i2c_controller:i2c.states[7]
ack_out << i2c_controller:i2c.ack
i2c_sda <> i2c_controller:i2c.i2c_sda
i2c_scl << i2c_controller:i2c.i2c_scl
i2c_sda_test << i2c_sda_test.DB_MAX_OUTPUT_PORT_TYPE
i2c_scl_test << i2c_controller:i2c.i2c_scl


|hdmi_init|i2c_clk_divider:clk_divider
reset => i2c_clk.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
ref_clk => count[0].CLK
ref_clk => count[1].CLK
ref_clk => count[2].CLK
ref_clk => count[3].CLK
ref_clk => count[4].CLK
ref_clk => count[5].CLK
ref_clk => count[6].CLK
ref_clk => count[7].CLK
ref_clk => count[8].CLK
ref_clk => count[9].CLK
ref_clk => count[10].CLK
ref_clk => count[11].CLK
ref_clk => count[12].CLK
ref_clk => i2c_clk~reg0.CLK
i2c_clk <= i2c_clk~reg0.DB_MAX_OUTPUT_PORT_TYPE


|hdmi_init|i2c_controller:i2c
clk_in => clk_in.IN1
reset => reset.IN1
start => start.IN1
dev_addr[0] => dev_addr[0].IN1
dev_addr[1] => dev_addr[1].IN1
dev_addr[2] => dev_addr[2].IN1
dev_addr[3] => dev_addr[3].IN1
dev_addr[4] => dev_addr[4].IN1
dev_addr[5] => dev_addr[5].IN1
dev_addr[6] => dev_addr[6].IN1
dev_addr[7] => dev_addr[7].IN1
reg_data[0] => reg_data[0].IN1
reg_data[1] => reg_data[1].IN1
reg_data[2] => reg_data[2].IN1
reg_data[3] => reg_data[3].IN1
reg_data[4] => reg_data[4].IN1
reg_data[5] => reg_data[5].IN1
reg_data[6] => reg_data[6].IN1
reg_data[7] => reg_data[7].IN1
reg_data[8] => reg_data[8].IN1
reg_data[9] => reg_data[9].IN1
reg_data[10] => reg_data[10].IN1
reg_data[11] => reg_data[11].IN1
reg_data[12] => reg_data[12].IN1
reg_data[13] => reg_data[13].IN1
reg_data[14] => reg_data[14].IN1
reg_data[15] => reg_data[15].IN1
ack <= i2c_master:master.ack
states[0] <= i2c_master:master.state
states[1] <= i2c_master:master.state
states[2] <= i2c_master:master.state
states[3] <= i2c_master:master.state
states[4] <= i2c_master:master.state
states[5] <= i2c_master:master.state
states[6] <= i2c_master:master.state
states[7] <= i2c_master:master.state
i2c_sda <> i2c_master:master.sda_input
i2c_sda <> i2c_sda
i2c_scl <= i2c_master:master.i2c_scl
ready_out <= i2c_master:master.finish


|hdmi_init|i2c_controller:i2c|i2c_master:master
reset => state[0]~reg0.ACLR
reset => state[1]~reg0.ACLR
reset => state[2]~reg0.ACLR
reset => state[3]~reg0.ACLR
reset => state[4]~reg0.ACLR
reset => state[5]~reg0.ACLR
reset => state[6]~reg0.ACLR
reset => state[7]~reg0.ACLR
reset => current_data[0].ENA
reset => finish~reg0.ENA
reset => ack~reg0.ENA
reset => i2c_sda~reg0.ENA
reset => i2c_scl~reg0.ENA
reset => count[7]~reg0.ENA
reset => count[6]~reg0.ENA
reset => count[5]~reg0.ENA
reset => count[4]~reg0.ENA
reset => count[3]~reg0.ENA
reset => count[2]~reg0.ENA
reset => count[1]~reg0.ENA
reset => count[0]~reg0.ENA
reset => command_index[7]~reg0.ENA
reset => command_index[6]~reg0.ENA
reset => command_index[5]~reg0.ENA
reset => command_index[4]~reg0.ENA
reset => command_index[3]~reg0.ENA
reset => command_index[2]~reg0.ENA
reset => command_index[1]~reg0.ENA
reset => command_index[0]~reg0.ENA
reset => current_data[8].ENA
reset => current_data[7].ENA
reset => current_data[6].ENA
reset => current_data[5].ENA
reset => current_data[4].ENA
reset => current_data[3].ENA
reset => current_data[2].ENA
reset => current_data[1].ENA
clk => current_data[0].CLK
clk => current_data[1].CLK
clk => current_data[2].CLK
clk => current_data[3].CLK
clk => current_data[4].CLK
clk => current_data[5].CLK
clk => current_data[6].CLK
clk => current_data[7].CLK
clk => current_data[8].CLK
clk => command_index[0]~reg0.CLK
clk => command_index[1]~reg0.CLK
clk => command_index[2]~reg0.CLK
clk => command_index[3]~reg0.CLK
clk => command_index[4]~reg0.CLK
clk => command_index[5]~reg0.CLK
clk => command_index[6]~reg0.CLK
clk => command_index[7]~reg0.CLK
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
clk => i2c_scl~reg0.CLK
clk => i2c_sda~reg0.CLK
clk => ack~reg0.CLK
clk => finish~reg0.CLK
clk => state[0]~reg0.CLK
clk => state[1]~reg0.CLK
clk => state[2]~reg0.CLK
clk => state[3]~reg0.CLK
clk => state[4]~reg0.CLK
clk => state[5]~reg0.CLK
clk => state[6]~reg0.CLK
clk => state[7]~reg0.CLK
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
reg_data[0] => current_data.DATAB
reg_data[1] => current_data.DATAB
reg_data[2] => current_data.DATAB
reg_data[3] => current_data.DATAB
reg_data[4] => current_data.DATAB
reg_data[5] => current_data.DATAB
reg_data[6] => current_data.DATAB
reg_data[7] => current_data.DATAB
reg_data[8] => current_data.DATAB
reg_data[9] => current_data.DATAB
reg_data[10] => current_data.DATAB
reg_data[11] => current_data.DATAB
reg_data[12] => current_data.DATAB
reg_data[13] => current_data.DATAB
reg_data[14] => current_data.DATAB
reg_data[15] => current_data.DATAB
dev_address[0] => Selector35.IN5
dev_address[1] => Selector34.IN5
dev_address[2] => Selector33.IN5
dev_address[3] => Selector32.IN5
dev_address[4] => Selector31.IN5
dev_address[5] => Selector30.IN5
dev_address[6] => Selector29.IN5
dev_address[7] => Selector28.IN5
sda_input => ack.OUTPUTSELECT
i2c_sda <= i2c_sda~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_scl <= i2c_scl~reg0.DB_MAX_OUTPUT_PORT_TYPE
finish <= finish~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[0] <= state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[1] <= state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[2] <= state[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[3] <= state[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[4] <= state[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[5] <= state[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[6] <= state[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[7] <= state[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
command_index[0] <= command_index[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
command_index[1] <= command_index[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
command_index[2] <= command_index[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
command_index[3] <= command_index[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
command_index[4] <= command_index[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
command_index[5] <= command_index[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
command_index[6] <= command_index[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
command_index[7] <= command_index[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ack <= ack~reg0.DB_MAX_OUTPUT_PORT_TYPE


|hdmi_init|sr_latch:sr_latch_n
S_n => always0.IN0
S_n => always0.IN0
R_n => always0.IN1
R_n => always0.IN1
Q <= output_Q.DB_MAX_OUTPUT_PORT_TYPE
Qn <= output_Q.DB_MAX_OUTPUT_PORT_TYPE


