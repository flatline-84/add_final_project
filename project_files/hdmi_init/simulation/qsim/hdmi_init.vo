// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "05/29/2019 13:26:27"

// 
// Device: Altera 5CSEBA6U23I7DK Package UFBGA672
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module hdmi_init (
	select,
	clk_ref,
	state_out,
	clk_100hz_out,
	ready_out,
	i2c_states,
	i2c_sda,
	i2c_scl);
input 	select;
input 	clk_ref;
output 	[3:0] state_out;
output 	clk_100hz_out;
output 	ready_out;
output 	[7:0] i2c_states;
output 	i2c_sda;
output 	i2c_scl;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk_ref~input_o ;
wire \reset_toggle~q ;
wire \select~input_o ;
wire \sr_latch_n|comb~0_combout ;
wire \sr_latch_n|always0~0_combout ;
wire \sr_latch_n|output_Q~combout ;
wire \i2c|clk_divider|i2c_clk~1_combout ;
wire \clk_divider|Add0~25_sumout ;
wire \clk_divider|Add0~26 ;
wire \clk_divider|Add0~29_sumout ;
wire \clk_divider|Add0~30 ;
wire \clk_divider|Add0~33_sumout ;
wire \clk_divider|Add0~34 ;
wire \clk_divider|Add0~1_sumout ;
wire \clk_divider|Add0~2 ;
wire \clk_divider|Add0~5_sumout ;
wire \clk_divider|Add0~6 ;
wire \clk_divider|Add0~9_sumout ;
wire \clk_divider|Add0~10 ;
wire \clk_divider|Add0~13_sumout ;
wire \clk_divider|Add0~14 ;
wire \clk_divider|Add0~21_sumout ;
wire \clk_divider|Add0~22 ;
wire \clk_divider|Add0~17_sumout ;
wire \clk_divider|Equal0~0_combout ;
wire \i2c|clk_divider|i2c_clk~0_combout ;
wire \i2c|clk_divider|i2c_clk~q ;
wire \current_state.STATE_BEGIN~0_combout ;
wire \current_state.STATE_BEGIN~q ;
wire \current_state~13_combout ;
wire \current_state.STATE_CHECK~q ;
wire \current_state~11_combout ;
wire \current_state.STATE_STOP~q ;
wire \Selector1~0_combout ;
wire \current_state.STATE_IDLE~q ;
wire \current_state~12_combout ;
wire \current_state.STATE_WRITE~q ;
wire \Selector0~0_combout ;
wire \start~q ;
wire \i2c|master|state~23_combout ;
wire \i2c|master|state.STATE_START~q ;
wire \i2c|master|WideOr5~0_combout ;
wire \i2c|master|Add0~2 ;
wire \i2c|master|Add0~5_sumout ;
wire \i2c|master|count[1]~0_combout ;
wire \i2c|master|Selector18~1_combout ;
wire \i2c|master|count[1]~1_combout ;
wire \i2c|master|count[1]~2_combout ;
wire \i2c|master|Add0~6 ;
wire \i2c|master|Add0~9_sumout ;
wire \i2c|master|Add0~10 ;
wire \i2c|master|Add0~13_sumout ;
wire \~GND~combout ;
wire \i2c|master|Add0~14 ;
wire \i2c|master|Add0~17_sumout ;
wire \i2c|master|Add0~18 ;
wire \i2c|master|Add0~21_sumout ;
wire \i2c|master|Add0~22 ;
wire \i2c|master|Add0~25_sumout ;
wire \i2c|master|Add0~26 ;
wire \i2c|master|Add0~29_sumout ;
wire \i2c|master|Equal0~1_combout ;
wire \i2c|master|Add0~1_sumout ;
wire \i2c|master|Selector18~0_combout ;
wire \i2c|master|Selector18~2_combout ;
wire \i2c|master|Equal0~0_combout ;
wire \i2c|master|Selector2~0_combout ;
wire \i2c|master|state.STATE_ADDR~q ;
wire \i2c|master|state~28_combout ;
wire \i2c|master|state.STATE_WACK~q ;
wire \i2c|master|Selector5~0_combout ;
wire \i2c|master|state.STATE_REG_ADDR~q ;
wire \i2c|master|state~24_combout ;
wire \i2c|master|state.STATE_WACK2~q ;
wire \i2c|master|Selector8~0_combout ;
wire \i2c|master|state.STATE_DATA~q ;
wire \i2c|master|state~25_combout ;
wire \i2c|master|state.STATE_WACK3~q ;
wire \i2c|master|state~27_combout ;
wire \i2c|master|state.STATE_PRE_STOP~q ;
wire \i2c|master|state~26_combout ;
wire \i2c|master|state.STATE_STOP~q ;
wire \i2c|master|state~22_combout ;
wire \i2c|master|state.STATE_IDLE~q ;
wire \i2c|master|Selector19~0_combout ;
wire \i2c|master|Selector19~1_combout ;
wire \i2c|master|i2c_sda_val~q ;
wire \i2c|master|i2c_sda_val~1_combout ;
wire \i2c|master|i2c_sda_val~en_q ;
wire \state_out~5_combout ;
wire \state_out~6_combout ;
wire \state_out~7_combout ;
wire \state_out~8_combout ;
wire \clk_divider|i2c_clk~0_combout ;
wire \clk_divider|i2c_clk~q ;
wire \i2c|master|state~21_combout ;
wire \i2c|master|WideOr3~combout ;
wire \i2c|master|WideOr2~combout ;
wire \i2c|master|WideOr1~combout ;
wire \i2c|master|WideOr0~combout ;
wire \i2c|master|always0~0_combout ;
wire \i2c|master|i2c_scl_enable~q ;
wire \i2c|master|i2c_scl~0_combout ;
wire [7:0] \i2c|master|count ;
wire [8:0] \clk_divider|count ;


cyclonev_io_obuf \i2c_sda~output (
	.i(\i2c|master|i2c_sda_val~q ),
	.oe(!\i2c|master|i2c_sda_val~en_q ),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(i2c_sda),
	.obar());
// synopsys translate_off
defparam \i2c_sda~output .bus_hold = "false";
defparam \i2c_sda~output .open_drain_output = "false";
defparam \i2c_sda~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \state_out[0]~output (
	.i(\state_out~5_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(state_out[0]),
	.obar());
// synopsys translate_off
defparam \state_out[0]~output .bus_hold = "false";
defparam \state_out[0]~output .open_drain_output = "false";
defparam \state_out[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \state_out[1]~output (
	.i(\state_out~6_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(state_out[1]),
	.obar());
// synopsys translate_off
defparam \state_out[1]~output .bus_hold = "false";
defparam \state_out[1]~output .open_drain_output = "false";
defparam \state_out[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \state_out[2]~output (
	.i(\state_out~7_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(state_out[2]),
	.obar());
// synopsys translate_off
defparam \state_out[2]~output .bus_hold = "false";
defparam \state_out[2]~output .open_drain_output = "false";
defparam \state_out[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \state_out[3]~output (
	.i(\state_out~8_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(state_out[3]),
	.obar());
// synopsys translate_off
defparam \state_out[3]~output .bus_hold = "false";
defparam \state_out[3]~output .open_drain_output = "false";
defparam \state_out[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \clk_100hz_out~output (
	.i(\clk_divider|i2c_clk~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(clk_100hz_out),
	.obar());
// synopsys translate_off
defparam \clk_100hz_out~output .bus_hold = "false";
defparam \clk_100hz_out~output .open_drain_output = "false";
defparam \clk_100hz_out~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \ready_out~output (
	.i(\i2c|master|state~21_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(ready_out),
	.obar());
// synopsys translate_off
defparam \ready_out~output .bus_hold = "false";
defparam \ready_out~output .open_drain_output = "false";
defparam \ready_out~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \i2c_states[0]~output (
	.i(\i2c|master|WideOr3~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(i2c_states[0]),
	.obar());
// synopsys translate_off
defparam \i2c_states[0]~output .bus_hold = "false";
defparam \i2c_states[0]~output .open_drain_output = "false";
defparam \i2c_states[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \i2c_states[1]~output (
	.i(\i2c|master|WideOr2~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(i2c_states[1]),
	.obar());
// synopsys translate_off
defparam \i2c_states[1]~output .bus_hold = "false";
defparam \i2c_states[1]~output .open_drain_output = "false";
defparam \i2c_states[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \i2c_states[2]~output (
	.i(\i2c|master|WideOr1~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(i2c_states[2]),
	.obar());
// synopsys translate_off
defparam \i2c_states[2]~output .bus_hold = "false";
defparam \i2c_states[2]~output .open_drain_output = "false";
defparam \i2c_states[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \i2c_states[3]~output (
	.i(\i2c|master|WideOr0~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(i2c_states[3]),
	.obar());
// synopsys translate_off
defparam \i2c_states[3]~output .bus_hold = "false";
defparam \i2c_states[3]~output .open_drain_output = "false";
defparam \i2c_states[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \i2c_states[4]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(i2c_states[4]),
	.obar());
// synopsys translate_off
defparam \i2c_states[4]~output .bus_hold = "false";
defparam \i2c_states[4]~output .open_drain_output = "false";
defparam \i2c_states[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \i2c_states[5]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(i2c_states[5]),
	.obar());
// synopsys translate_off
defparam \i2c_states[5]~output .bus_hold = "false";
defparam \i2c_states[5]~output .open_drain_output = "false";
defparam \i2c_states[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \i2c_states[6]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(i2c_states[6]),
	.obar());
// synopsys translate_off
defparam \i2c_states[6]~output .bus_hold = "false";
defparam \i2c_states[6]~output .open_drain_output = "false";
defparam \i2c_states[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \i2c_states[7]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(i2c_states[7]),
	.obar());
// synopsys translate_off
defparam \i2c_states[7]~output .bus_hold = "false";
defparam \i2c_states[7]~output .open_drain_output = "false";
defparam \i2c_states[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \i2c_scl~output (
	.i(\i2c|master|i2c_scl~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(i2c_scl),
	.obar());
// synopsys translate_off
defparam \i2c_scl~output .bus_hold = "false";
defparam \i2c_scl~output .open_drain_output = "false";
defparam \i2c_scl~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \clk_ref~input (
	.i(clk_ref),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk_ref~input_o ));
// synopsys translate_off
defparam \clk_ref~input .bus_hold = "false";
defparam \clk_ref~input .simulate_z_as = "z";
// synopsys translate_on

dffeas reset_toggle(
	.clk(!\clk_ref~input_o ),
	.d(\sr_latch_n|output_Q~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\reset_toggle~q ),
	.prn(vcc));
// synopsys translate_off
defparam reset_toggle.is_wysiwyg = "true";
defparam reset_toggle.power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \select~input (
	.i(select),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\select~input_o ));
// synopsys translate_off
defparam \select~input .bus_hold = "false";
defparam \select~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \sr_latch_n|comb~0 (
// Equation(s):
// \sr_latch_n|comb~0_combout  = (\select~input_o ) # (\reset_toggle~q )

	.dataa(!\reset_toggle~q ),
	.datab(!\select~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\sr_latch_n|comb~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \sr_latch_n|comb~0 .extended_lut = "off";
defparam \sr_latch_n|comb~0 .lut_mask = 64'h7777777777777777;
defparam \sr_latch_n|comb~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \sr_latch_n|always0~0 (
// Equation(s):
// \sr_latch_n|always0~0_combout  = (\reset_toggle~q  & \select~input_o )

	.dataa(!\reset_toggle~q ),
	.datab(!\select~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\sr_latch_n|always0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \sr_latch_n|always0~0 .extended_lut = "off";
defparam \sr_latch_n|always0~0 .lut_mask = 64'h1111111111111111;
defparam \sr_latch_n|always0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \sr_latch_n|output_Q (
// Equation(s):
// \sr_latch_n|output_Q~combout  = ( \sr_latch_n|comb~0_combout  & ( !\sr_latch_n|always0~0_combout  & ( \sr_latch_n|output_Q~combout  ) ) ) # ( !\sr_latch_n|comb~0_combout  & ( !\sr_latch_n|always0~0_combout  ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\sr_latch_n|output_Q~combout ),
	.datae(!\sr_latch_n|comb~0_combout ),
	.dataf(!\sr_latch_n|always0~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\sr_latch_n|output_Q~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \sr_latch_n|output_Q .extended_lut = "off";
defparam \sr_latch_n|output_Q .lut_mask = 64'hFFFF00FF00000000;
defparam \sr_latch_n|output_Q .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|clk_divider|i2c_clk~1 (
// Equation(s):
// \i2c|clk_divider|i2c_clk~1_combout  = (!\sr_latch_n|output_Q~combout  & !\i2c|clk_divider|i2c_clk~q )

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(!\i2c|clk_divider|i2c_clk~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|clk_divider|i2c_clk~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|clk_divider|i2c_clk~1 .extended_lut = "off";
defparam \i2c|clk_divider|i2c_clk~1 .lut_mask = 64'h8888888888888888;
defparam \i2c|clk_divider|i2c_clk~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \clk_divider|Add0~25 (
// Equation(s):
// \clk_divider|Add0~25_sumout  = SUM(( \clk_divider|count [0] ) + ( VCC ) + ( !VCC ))
// \clk_divider|Add0~26  = CARRY(( \clk_divider|count [0] ) + ( VCC ) + ( !VCC ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\clk_divider|count [0]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(),
	.sumout(\clk_divider|Add0~25_sumout ),
	.cout(\clk_divider|Add0~26 ),
	.shareout());
// synopsys translate_off
defparam \clk_divider|Add0~25 .extended_lut = "off";
defparam \clk_divider|Add0~25 .lut_mask = 64'h00000000000000FF;
defparam \clk_divider|Add0~25 .shared_arith = "off";
// synopsys translate_on

dffeas \clk_divider|count[0] (
	.clk(\clk_ref~input_o ),
	.d(\clk_divider|Add0~25_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\i2c|clk_divider|i2c_clk~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|count [0]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|count[0] .is_wysiwyg = "true";
defparam \clk_divider|count[0] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \clk_divider|Add0~29 (
// Equation(s):
// \clk_divider|Add0~29_sumout  = SUM(( \clk_divider|count [1] ) + ( GND ) + ( \clk_divider|Add0~26  ))
// \clk_divider|Add0~30  = CARRY(( \clk_divider|count [1] ) + ( GND ) + ( \clk_divider|Add0~26  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\clk_divider|count [1]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\clk_divider|Add0~26 ),
	.sharein(gnd),
	.combout(),
	.sumout(\clk_divider|Add0~29_sumout ),
	.cout(\clk_divider|Add0~30 ),
	.shareout());
// synopsys translate_off
defparam \clk_divider|Add0~29 .extended_lut = "off";
defparam \clk_divider|Add0~29 .lut_mask = 64'h0000FFFF000000FF;
defparam \clk_divider|Add0~29 .shared_arith = "off";
// synopsys translate_on

dffeas \clk_divider|count[1] (
	.clk(\clk_ref~input_o ),
	.d(\clk_divider|Add0~29_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\i2c|clk_divider|i2c_clk~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|count [1]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|count[1] .is_wysiwyg = "true";
defparam \clk_divider|count[1] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \clk_divider|Add0~33 (
// Equation(s):
// \clk_divider|Add0~33_sumout  = SUM(( \clk_divider|count [2] ) + ( GND ) + ( \clk_divider|Add0~30  ))
// \clk_divider|Add0~34  = CARRY(( \clk_divider|count [2] ) + ( GND ) + ( \clk_divider|Add0~30  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\clk_divider|count [2]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\clk_divider|Add0~30 ),
	.sharein(gnd),
	.combout(),
	.sumout(\clk_divider|Add0~33_sumout ),
	.cout(\clk_divider|Add0~34 ),
	.shareout());
// synopsys translate_off
defparam \clk_divider|Add0~33 .extended_lut = "off";
defparam \clk_divider|Add0~33 .lut_mask = 64'h0000FFFF000000FF;
defparam \clk_divider|Add0~33 .shared_arith = "off";
// synopsys translate_on

dffeas \clk_divider|count[2] (
	.clk(\clk_ref~input_o ),
	.d(\clk_divider|Add0~33_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\i2c|clk_divider|i2c_clk~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|count [2]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|count[2] .is_wysiwyg = "true";
defparam \clk_divider|count[2] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \clk_divider|Add0~1 (
// Equation(s):
// \clk_divider|Add0~1_sumout  = SUM(( \clk_divider|count [3] ) + ( GND ) + ( \clk_divider|Add0~34  ))
// \clk_divider|Add0~2  = CARRY(( \clk_divider|count [3] ) + ( GND ) + ( \clk_divider|Add0~34  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\clk_divider|count [3]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\clk_divider|Add0~34 ),
	.sharein(gnd),
	.combout(),
	.sumout(\clk_divider|Add0~1_sumout ),
	.cout(\clk_divider|Add0~2 ),
	.shareout());
// synopsys translate_off
defparam \clk_divider|Add0~1 .extended_lut = "off";
defparam \clk_divider|Add0~1 .lut_mask = 64'h0000FFFF000000FF;
defparam \clk_divider|Add0~1 .shared_arith = "off";
// synopsys translate_on

dffeas \clk_divider|count[3] (
	.clk(\clk_ref~input_o ),
	.d(\clk_divider|Add0~1_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\i2c|clk_divider|i2c_clk~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|count [3]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|count[3] .is_wysiwyg = "true";
defparam \clk_divider|count[3] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \clk_divider|Add0~5 (
// Equation(s):
// \clk_divider|Add0~5_sumout  = SUM(( \clk_divider|count [4] ) + ( GND ) + ( \clk_divider|Add0~2  ))
// \clk_divider|Add0~6  = CARRY(( \clk_divider|count [4] ) + ( GND ) + ( \clk_divider|Add0~2  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\clk_divider|count [4]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\clk_divider|Add0~2 ),
	.sharein(gnd),
	.combout(),
	.sumout(\clk_divider|Add0~5_sumout ),
	.cout(\clk_divider|Add0~6 ),
	.shareout());
// synopsys translate_off
defparam \clk_divider|Add0~5 .extended_lut = "off";
defparam \clk_divider|Add0~5 .lut_mask = 64'h0000FFFF000000FF;
defparam \clk_divider|Add0~5 .shared_arith = "off";
// synopsys translate_on

dffeas \clk_divider|count[4] (
	.clk(\clk_ref~input_o ),
	.d(\clk_divider|Add0~5_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\i2c|clk_divider|i2c_clk~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|count [4]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|count[4] .is_wysiwyg = "true";
defparam \clk_divider|count[4] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \clk_divider|Add0~9 (
// Equation(s):
// \clk_divider|Add0~9_sumout  = SUM(( \clk_divider|count [5] ) + ( GND ) + ( \clk_divider|Add0~6  ))
// \clk_divider|Add0~10  = CARRY(( \clk_divider|count [5] ) + ( GND ) + ( \clk_divider|Add0~6  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\clk_divider|count [5]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\clk_divider|Add0~6 ),
	.sharein(gnd),
	.combout(),
	.sumout(\clk_divider|Add0~9_sumout ),
	.cout(\clk_divider|Add0~10 ),
	.shareout());
// synopsys translate_off
defparam \clk_divider|Add0~9 .extended_lut = "off";
defparam \clk_divider|Add0~9 .lut_mask = 64'h0000FFFF000000FF;
defparam \clk_divider|Add0~9 .shared_arith = "off";
// synopsys translate_on

dffeas \clk_divider|count[5] (
	.clk(\clk_ref~input_o ),
	.d(\clk_divider|Add0~9_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\i2c|clk_divider|i2c_clk~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|count [5]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|count[5] .is_wysiwyg = "true";
defparam \clk_divider|count[5] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \clk_divider|Add0~13 (
// Equation(s):
// \clk_divider|Add0~13_sumout  = SUM(( \clk_divider|count [6] ) + ( GND ) + ( \clk_divider|Add0~10  ))
// \clk_divider|Add0~14  = CARRY(( \clk_divider|count [6] ) + ( GND ) + ( \clk_divider|Add0~10  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\clk_divider|count [6]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\clk_divider|Add0~10 ),
	.sharein(gnd),
	.combout(),
	.sumout(\clk_divider|Add0~13_sumout ),
	.cout(\clk_divider|Add0~14 ),
	.shareout());
// synopsys translate_off
defparam \clk_divider|Add0~13 .extended_lut = "off";
defparam \clk_divider|Add0~13 .lut_mask = 64'h0000FFFF000000FF;
defparam \clk_divider|Add0~13 .shared_arith = "off";
// synopsys translate_on

dffeas \clk_divider|count[6] (
	.clk(\clk_ref~input_o ),
	.d(\clk_divider|Add0~13_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\i2c|clk_divider|i2c_clk~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|count [6]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|count[6] .is_wysiwyg = "true";
defparam \clk_divider|count[6] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \clk_divider|Add0~21 (
// Equation(s):
// \clk_divider|Add0~21_sumout  = SUM(( \clk_divider|count [7] ) + ( GND ) + ( \clk_divider|Add0~14  ))
// \clk_divider|Add0~22  = CARRY(( \clk_divider|count [7] ) + ( GND ) + ( \clk_divider|Add0~14  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\clk_divider|count [7]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\clk_divider|Add0~14 ),
	.sharein(gnd),
	.combout(),
	.sumout(\clk_divider|Add0~21_sumout ),
	.cout(\clk_divider|Add0~22 ),
	.shareout());
// synopsys translate_off
defparam \clk_divider|Add0~21 .extended_lut = "off";
defparam \clk_divider|Add0~21 .lut_mask = 64'h0000FFFF000000FF;
defparam \clk_divider|Add0~21 .shared_arith = "off";
// synopsys translate_on

dffeas \clk_divider|count[7] (
	.clk(\clk_ref~input_o ),
	.d(\clk_divider|Add0~21_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\i2c|clk_divider|i2c_clk~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|count [7]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|count[7] .is_wysiwyg = "true";
defparam \clk_divider|count[7] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \clk_divider|Add0~17 (
// Equation(s):
// \clk_divider|Add0~17_sumout  = SUM(( \clk_divider|count [8] ) + ( GND ) + ( \clk_divider|Add0~22  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\clk_divider|count [8]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\clk_divider|Add0~22 ),
	.sharein(gnd),
	.combout(),
	.sumout(\clk_divider|Add0~17_sumout ),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \clk_divider|Add0~17 .extended_lut = "off";
defparam \clk_divider|Add0~17 .lut_mask = 64'h0000FFFF000000FF;
defparam \clk_divider|Add0~17 .shared_arith = "off";
// synopsys translate_on

dffeas \clk_divider|count[8] (
	.clk(\clk_ref~input_o ),
	.d(\clk_divider|Add0~17_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\i2c|clk_divider|i2c_clk~0_combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|count [8]),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|count[8] .is_wysiwyg = "true";
defparam \clk_divider|count[8] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \clk_divider|Equal0~0 (
// Equation(s):
// \clk_divider|Equal0~0_combout  = ( !\clk_divider|count [2] & ( (!\clk_divider|count [8] & (\clk_divider|count [7] & (\clk_divider|count [0] & !\clk_divider|count [1]))) ) )

	.dataa(!\clk_divider|count [8]),
	.datab(!\clk_divider|count [7]),
	.datac(!\clk_divider|count [0]),
	.datad(!\clk_divider|count [1]),
	.datae(!\clk_divider|count [2]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\clk_divider|Equal0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \clk_divider|Equal0~0 .extended_lut = "off";
defparam \clk_divider|Equal0~0 .lut_mask = 64'h0200000002000000;
defparam \clk_divider|Equal0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|clk_divider|i2c_clk~0 (
// Equation(s):
// \i2c|clk_divider|i2c_clk~0_combout  = ( \clk_divider|count [6] & ( \clk_divider|Equal0~0_combout  & ( ((\clk_divider|count [3] & (\clk_divider|count [4] & \clk_divider|count [5]))) # (\sr_latch_n|output_Q~combout ) ) ) ) # ( !\clk_divider|count [6] & ( 
// \clk_divider|Equal0~0_combout  & ( \sr_latch_n|output_Q~combout  ) ) ) # ( \clk_divider|count [6] & ( !\clk_divider|Equal0~0_combout  & ( \sr_latch_n|output_Q~combout  ) ) ) # ( !\clk_divider|count [6] & ( !\clk_divider|Equal0~0_combout  & ( 
// \sr_latch_n|output_Q~combout  ) ) )

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(!\clk_divider|count [3]),
	.datac(!\clk_divider|count [4]),
	.datad(!\clk_divider|count [5]),
	.datae(!\clk_divider|count [6]),
	.dataf(!\clk_divider|Equal0~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|clk_divider|i2c_clk~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|clk_divider|i2c_clk~0 .extended_lut = "off";
defparam \i2c|clk_divider|i2c_clk~0 .lut_mask = 64'h5555555555555557;
defparam \i2c|clk_divider|i2c_clk~0 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|clk_divider|i2c_clk (
	.clk(\clk_ref~input_o ),
	.d(\i2c|clk_divider|i2c_clk~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\i2c|clk_divider|i2c_clk~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|clk_divider|i2c_clk~q ),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|clk_divider|i2c_clk .is_wysiwyg = "true";
defparam \i2c|clk_divider|i2c_clk .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \current_state.STATE_BEGIN~0 (
// Equation(s):
// \current_state.STATE_BEGIN~0_combout  = !\sr_latch_n|output_Q~combout 

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\current_state.STATE_BEGIN~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \current_state.STATE_BEGIN~0 .extended_lut = "off";
defparam \current_state.STATE_BEGIN~0 .lut_mask = 64'hAAAAAAAAAAAAAAAA;
defparam \current_state.STATE_BEGIN~0 .shared_arith = "off";
// synopsys translate_on

dffeas \current_state.STATE_BEGIN (
	.clk(\clk_ref~input_o ),
	.d(\current_state.STATE_BEGIN~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\current_state.STATE_BEGIN~q ),
	.prn(vcc));
// synopsys translate_off
defparam \current_state.STATE_BEGIN .is_wysiwyg = "true";
defparam \current_state.STATE_BEGIN .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \current_state~13 (
// Equation(s):
// \current_state~13_combout  = (\current_state.STATE_WRITE~q  & !\sr_latch_n|output_Q~combout )

	.dataa(!\current_state.STATE_WRITE~q ),
	.datab(!\sr_latch_n|output_Q~combout ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\current_state~13_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \current_state~13 .extended_lut = "off";
defparam \current_state~13 .lut_mask = 64'h4444444444444444;
defparam \current_state~13 .shared_arith = "off";
// synopsys translate_on

dffeas \current_state.STATE_CHECK (
	.clk(\clk_ref~input_o ),
	.d(\current_state~13_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\current_state.STATE_CHECK~q ),
	.prn(vcc));
// synopsys translate_off
defparam \current_state.STATE_CHECK .is_wysiwyg = "true";
defparam \current_state.STATE_CHECK .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \current_state~11 (
// Equation(s):
// \current_state~11_combout  = (\current_state.STATE_CHECK~q  & !\sr_latch_n|output_Q~combout )

	.dataa(!\current_state.STATE_CHECK~q ),
	.datab(!\sr_latch_n|output_Q~combout ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\current_state~11_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \current_state~11 .extended_lut = "off";
defparam \current_state~11 .lut_mask = 64'h4444444444444444;
defparam \current_state~11 .shared_arith = "off";
// synopsys translate_on

dffeas \current_state.STATE_STOP (
	.clk(\clk_ref~input_o ),
	.d(\current_state~11_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\current_state.STATE_STOP~q ),
	.prn(vcc));
// synopsys translate_off
defparam \current_state.STATE_STOP .is_wysiwyg = "true";
defparam \current_state.STATE_STOP .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Selector1~0 (
// Equation(s):
// \Selector1~0_combout  = ( \i2c|master|state.STATE_IDLE~q  & ( (!\current_state.STATE_BEGIN~q ) # ((\current_state.STATE_IDLE~q ) # (\current_state.STATE_STOP~q )) ) ) # ( !\i2c|master|state.STATE_IDLE~q  & ( (!\current_state.STATE_BEGIN~q ) # 
// (((\current_state.STATE_IDLE~q  & \sr_latch_n|output_Q~combout )) # (\current_state.STATE_STOP~q )) ) )

	.dataa(!\current_state.STATE_BEGIN~q ),
	.datab(!\current_state.STATE_STOP~q ),
	.datac(!\current_state.STATE_IDLE~q ),
	.datad(!\sr_latch_n|output_Q~combout ),
	.datae(!\i2c|master|state.STATE_IDLE~q ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector1~0 .extended_lut = "off";
defparam \Selector1~0 .lut_mask = 64'hBBBFBFBFBBBFBFBF;
defparam \Selector1~0 .shared_arith = "off";
// synopsys translate_on

dffeas \current_state.STATE_IDLE (
	.clk(\clk_ref~input_o ),
	.d(\Selector1~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\sr_latch_n|output_Q~combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\current_state.STATE_IDLE~q ),
	.prn(vcc));
// synopsys translate_off
defparam \current_state.STATE_IDLE .is_wysiwyg = "true";
defparam \current_state.STATE_IDLE .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \current_state~12 (
// Equation(s):
// \current_state~12_combout  = (\current_state.STATE_IDLE~q  & (!\sr_latch_n|output_Q~combout  & !\i2c|master|state.STATE_IDLE~q ))

	.dataa(!\current_state.STATE_IDLE~q ),
	.datab(!\sr_latch_n|output_Q~combout ),
	.datac(!\i2c|master|state.STATE_IDLE~q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\current_state~12_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \current_state~12 .extended_lut = "off";
defparam \current_state~12 .lut_mask = 64'h4040404040404040;
defparam \current_state~12 .shared_arith = "off";
// synopsys translate_on

dffeas \current_state.STATE_WRITE (
	.clk(\clk_ref~input_o ),
	.d(\current_state~12_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\current_state.STATE_WRITE~q ),
	.prn(vcc));
// synopsys translate_off
defparam \current_state.STATE_WRITE .is_wysiwyg = "true";
defparam \current_state.STATE_WRITE .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Selector0~0 (
// Equation(s):
// \Selector0~0_combout  = ((\current_state.STATE_BEGIN~q  & \start~q )) # (\current_state.STATE_WRITE~q )

	.dataa(!\current_state.STATE_BEGIN~q ),
	.datab(!\current_state.STATE_WRITE~q ),
	.datac(!\start~q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector0~0 .extended_lut = "off";
defparam \Selector0~0 .lut_mask = 64'h3737373737373737;
defparam \Selector0~0 .shared_arith = "off";
// synopsys translate_on

dffeas start(
	.clk(\clk_ref~input_o ),
	.d(\Selector0~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\sr_latch_n|output_Q~combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\start~q ),
	.prn(vcc));
// synopsys translate_off
defparam start.is_wysiwyg = "true";
defparam start.power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|state~23 (
// Equation(s):
// \i2c|master|state~23_combout  = (!\sr_latch_n|output_Q~combout  & (!\i2c|master|state.STATE_IDLE~q  & \start~q ))

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(!\i2c|master|state.STATE_IDLE~q ),
	.datac(!\start~q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|state~23_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|state~23 .extended_lut = "off";
defparam \i2c|master|state~23 .lut_mask = 64'h0808080808080808;
defparam \i2c|master|state~23 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|state.STATE_START (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|state~23_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|state.STATE_START~q ),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|state.STATE_START .is_wysiwyg = "true";
defparam \i2c|master|state.STATE_START .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|WideOr5~0 (
// Equation(s):
// \i2c|master|WideOr5~0_combout  = (!\i2c|master|state.STATE_WACK2~q  & !\i2c|master|state.STATE_WACK~q )

	.dataa(!\i2c|master|state.STATE_WACK2~q ),
	.datab(!\i2c|master|state.STATE_WACK~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|WideOr5~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|WideOr5~0 .extended_lut = "off";
defparam \i2c|master|WideOr5~0 .lut_mask = 64'h8888888888888888;
defparam \i2c|master|WideOr5~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Add0~1 (
// Equation(s):
// \i2c|master|Add0~1_sumout  = SUM(( \i2c|master|count [0] ) + ( VCC ) + ( !VCC ))
// \i2c|master|Add0~2  = CARRY(( \i2c|master|count [0] ) + ( VCC ) + ( !VCC ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\i2c|master|count [0]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(),
	.sumout(\i2c|master|Add0~1_sumout ),
	.cout(\i2c|master|Add0~2 ),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Add0~1 .extended_lut = "off";
defparam \i2c|master|Add0~1 .lut_mask = 64'h00000000000000FF;
defparam \i2c|master|Add0~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Add0~5 (
// Equation(s):
// \i2c|master|Add0~5_sumout  = SUM(( \i2c|master|count [1] ) + ( VCC ) + ( \i2c|master|Add0~2  ))
// \i2c|master|Add0~6  = CARRY(( \i2c|master|count [1] ) + ( VCC ) + ( \i2c|master|Add0~2  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\i2c|master|count [1]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\i2c|master|Add0~2 ),
	.sharein(gnd),
	.combout(),
	.sumout(\i2c|master|Add0~5_sumout ),
	.cout(\i2c|master|Add0~6 ),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Add0~5 .extended_lut = "off";
defparam \i2c|master|Add0~5 .lut_mask = 64'h00000000000000FF;
defparam \i2c|master|Add0~5 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|count[1]~0 (
// Equation(s):
// \i2c|master|count[1]~0_combout  = (((\i2c|master|state.STATE_WACK~q ) # (\i2c|master|state.STATE_WACK2~q )) # (\i2c|master|state.STATE_START~q )) # (\sr_latch_n|output_Q~combout )

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(!\i2c|master|state.STATE_START~q ),
	.datac(!\i2c|master|state.STATE_WACK2~q ),
	.datad(!\i2c|master|state.STATE_WACK~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|count[1]~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|count[1]~0 .extended_lut = "off";
defparam \i2c|master|count[1]~0 .lut_mask = 64'h7FFF7FFF7FFF7FFF;
defparam \i2c|master|count[1]~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Selector18~1 (
// Equation(s):
// \i2c|master|Selector18~1_combout  = (!\i2c|master|state.STATE_REG_ADDR~q  & (!\i2c|master|state.STATE_ADDR~q  & !\i2c|master|state.STATE_DATA~q ))

	.dataa(!\i2c|master|state.STATE_REG_ADDR~q ),
	.datab(!\i2c|master|state.STATE_ADDR~q ),
	.datac(!\i2c|master|state.STATE_DATA~q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|Selector18~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Selector18~1 .extended_lut = "off";
defparam \i2c|master|Selector18~1 .lut_mask = 64'h8080808080808080;
defparam \i2c|master|Selector18~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|count[1]~1 (
// Equation(s):
// \i2c|master|count[1]~1_combout  = ( \i2c|master|state.STATE_PRE_STOP~q  & ( !\sr_latch_n|output_Q~combout  ) ) # ( !\i2c|master|state.STATE_PRE_STOP~q  & ( (!\sr_latch_n|output_Q~combout  & ((!\i2c|master|state.STATE_IDLE~q ) # 
// ((\i2c|master|state.STATE_STOP~q ) # (\i2c|master|state.STATE_WACK3~q )))) ) )

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(!\i2c|master|state.STATE_IDLE~q ),
	.datac(!\i2c|master|state.STATE_WACK3~q ),
	.datad(!\i2c|master|state.STATE_STOP~q ),
	.datae(!\i2c|master|state.STATE_PRE_STOP~q ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|count[1]~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|count[1]~1 .extended_lut = "off";
defparam \i2c|master|count[1]~1 .lut_mask = 64'h8AAAAAAA8AAAAAAA;
defparam \i2c|master|count[1]~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|count[1]~2 (
// Equation(s):
// \i2c|master|count[1]~2_combout  = ( !\i2c|master|count[1]~1_combout  & ( ((!\i2c|master|Equal0~0_combout ) # ((!\i2c|master|Equal0~1_combout ) # (\i2c|master|Selector18~1_combout ))) # (\sr_latch_n|output_Q~combout ) ) )

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(!\i2c|master|Equal0~0_combout ),
	.datac(!\i2c|master|Equal0~1_combout ),
	.datad(!\i2c|master|Selector18~1_combout ),
	.datae(!\i2c|master|count[1]~1_combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|count[1]~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|count[1]~2 .extended_lut = "off";
defparam \i2c|master|count[1]~2 .lut_mask = 64'hFDFF0000FDFF0000;
defparam \i2c|master|count[1]~2 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|count[1] (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|Add0~5_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\i2c|master|count[1]~0_combout ),
	.ena(\i2c|master|count[1]~2_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|count [1]),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|count[1] .is_wysiwyg = "true";
defparam \i2c|master|count[1] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Add0~9 (
// Equation(s):
// \i2c|master|Add0~9_sumout  = SUM(( \i2c|master|count [2] ) + ( VCC ) + ( \i2c|master|Add0~6  ))
// \i2c|master|Add0~10  = CARRY(( \i2c|master|count [2] ) + ( VCC ) + ( \i2c|master|Add0~6  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\i2c|master|count [2]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\i2c|master|Add0~6 ),
	.sharein(gnd),
	.combout(),
	.sumout(\i2c|master|Add0~9_sumout ),
	.cout(\i2c|master|Add0~10 ),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Add0~9 .extended_lut = "off";
defparam \i2c|master|Add0~9 .lut_mask = 64'h00000000000000FF;
defparam \i2c|master|Add0~9 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|count[2] (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|Add0~9_sumout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\i2c|master|count[1]~0_combout ),
	.ena(\i2c|master|count[1]~2_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|count [2]),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|count[2] .is_wysiwyg = "true";
defparam \i2c|master|count[2] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Add0~13 (
// Equation(s):
// \i2c|master|Add0~13_sumout  = SUM(( \i2c|master|count [3] ) + ( VCC ) + ( \i2c|master|Add0~10  ))
// \i2c|master|Add0~14  = CARRY(( \i2c|master|count [3] ) + ( VCC ) + ( \i2c|master|Add0~10  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\i2c|master|count [3]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\i2c|master|Add0~10 ),
	.sharein(gnd),
	.combout(),
	.sumout(\i2c|master|Add0~13_sumout ),
	.cout(\i2c|master|Add0~14 ),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Add0~13 .extended_lut = "off";
defparam \i2c|master|Add0~13 .lut_mask = 64'h00000000000000FF;
defparam \i2c|master|Add0~13 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \~GND (
// Equation(s):
// \~GND~combout  = GND

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\~GND~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \~GND .extended_lut = "off";
defparam \~GND .lut_mask = 64'h0000000000000000;
defparam \~GND .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|count[3] (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|Add0~13_sumout ),
	.asdata(\~GND~combout ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\i2c|master|count[1]~0_combout ),
	.ena(\i2c|master|count[1]~2_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|count [3]),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|count[3] .is_wysiwyg = "true";
defparam \i2c|master|count[3] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Add0~17 (
// Equation(s):
// \i2c|master|Add0~17_sumout  = SUM(( \i2c|master|count [4] ) + ( VCC ) + ( \i2c|master|Add0~14  ))
// \i2c|master|Add0~18  = CARRY(( \i2c|master|count [4] ) + ( VCC ) + ( \i2c|master|Add0~14  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\i2c|master|count [4]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\i2c|master|Add0~14 ),
	.sharein(gnd),
	.combout(),
	.sumout(\i2c|master|Add0~17_sumout ),
	.cout(\i2c|master|Add0~18 ),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Add0~17 .extended_lut = "off";
defparam \i2c|master|Add0~17 .lut_mask = 64'h00000000000000FF;
defparam \i2c|master|Add0~17 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|count[4] (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|Add0~17_sumout ),
	.asdata(\~GND~combout ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\i2c|master|count[1]~0_combout ),
	.ena(\i2c|master|count[1]~2_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|count [4]),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|count[4] .is_wysiwyg = "true";
defparam \i2c|master|count[4] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Add0~21 (
// Equation(s):
// \i2c|master|Add0~21_sumout  = SUM(( \i2c|master|count [5] ) + ( VCC ) + ( \i2c|master|Add0~18  ))
// \i2c|master|Add0~22  = CARRY(( \i2c|master|count [5] ) + ( VCC ) + ( \i2c|master|Add0~18  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\i2c|master|count [5]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\i2c|master|Add0~18 ),
	.sharein(gnd),
	.combout(),
	.sumout(\i2c|master|Add0~21_sumout ),
	.cout(\i2c|master|Add0~22 ),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Add0~21 .extended_lut = "off";
defparam \i2c|master|Add0~21 .lut_mask = 64'h00000000000000FF;
defparam \i2c|master|Add0~21 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|count[5] (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|Add0~21_sumout ),
	.asdata(\~GND~combout ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\i2c|master|count[1]~0_combout ),
	.ena(\i2c|master|count[1]~2_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|count [5]),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|count[5] .is_wysiwyg = "true";
defparam \i2c|master|count[5] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Add0~25 (
// Equation(s):
// \i2c|master|Add0~25_sumout  = SUM(( \i2c|master|count [6] ) + ( VCC ) + ( \i2c|master|Add0~22  ))
// \i2c|master|Add0~26  = CARRY(( \i2c|master|count [6] ) + ( VCC ) + ( \i2c|master|Add0~22  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\i2c|master|count [6]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\i2c|master|Add0~22 ),
	.sharein(gnd),
	.combout(),
	.sumout(\i2c|master|Add0~25_sumout ),
	.cout(\i2c|master|Add0~26 ),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Add0~25 .extended_lut = "off";
defparam \i2c|master|Add0~25 .lut_mask = 64'h00000000000000FF;
defparam \i2c|master|Add0~25 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|count[6] (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|Add0~25_sumout ),
	.asdata(\~GND~combout ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\i2c|master|count[1]~0_combout ),
	.ena(\i2c|master|count[1]~2_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|count [6]),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|count[6] .is_wysiwyg = "true";
defparam \i2c|master|count[6] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Add0~29 (
// Equation(s):
// \i2c|master|Add0~29_sumout  = SUM(( \i2c|master|count [7] ) + ( VCC ) + ( \i2c|master|Add0~26  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(!\i2c|master|count [7]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\i2c|master|Add0~26 ),
	.sharein(gnd),
	.combout(),
	.sumout(\i2c|master|Add0~29_sumout ),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Add0~29 .extended_lut = "off";
defparam \i2c|master|Add0~29 .lut_mask = 64'h00000000000000FF;
defparam \i2c|master|Add0~29 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|count[7] (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|Add0~29_sumout ),
	.asdata(\~GND~combout ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\i2c|master|count[1]~0_combout ),
	.ena(\i2c|master|count[1]~2_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|count [7]),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|count[7] .is_wysiwyg = "true";
defparam \i2c|master|count[7] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Equal0~1 (
// Equation(s):
// \i2c|master|Equal0~1_combout  = (!\i2c|master|count [6] & !\i2c|master|count [7])

	.dataa(!\i2c|master|count [6]),
	.datab(!\i2c|master|count [7]),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|Equal0~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Equal0~1 .extended_lut = "off";
defparam \i2c|master|Equal0~1 .lut_mask = 64'h8888888888888888;
defparam \i2c|master|Equal0~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Selector18~0 (
// Equation(s):
// \i2c|master|Selector18~0_combout  = ( \i2c|master|count [0] & ( (!\i2c|master|state.STATE_IDLE~q ) # (((\i2c|master|state.STATE_PRE_STOP~q ) # (\i2c|master|state.STATE_STOP~q )) # (\i2c|master|state.STATE_WACK3~q )) ) )

	.dataa(!\i2c|master|state.STATE_IDLE~q ),
	.datab(!\i2c|master|state.STATE_WACK3~q ),
	.datac(!\i2c|master|state.STATE_STOP~q ),
	.datad(!\i2c|master|state.STATE_PRE_STOP~q ),
	.datae(!\i2c|master|count [0]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|Selector18~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Selector18~0 .extended_lut = "off";
defparam \i2c|master|Selector18~0 .lut_mask = 64'h0000BFFF0000BFFF;
defparam \i2c|master|Selector18~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Selector18~2 (
// Equation(s):
// \i2c|master|Selector18~2_combout  = ( \i2c|master|Selector18~0_combout  & ( \i2c|master|Selector18~1_combout  ) ) # ( !\i2c|master|Selector18~0_combout  & ( \i2c|master|Selector18~1_combout  & ( !\i2c|master|WideOr5~0_combout  ) ) ) # ( 
// \i2c|master|Selector18~0_combout  & ( !\i2c|master|Selector18~1_combout  ) ) # ( !\i2c|master|Selector18~0_combout  & ( !\i2c|master|Selector18~1_combout  & ( (!\i2c|master|WideOr5~0_combout ) # ((\i2c|master|Add0~1_sumout  & 
// ((!\i2c|master|Equal0~0_combout ) # (!\i2c|master|Equal0~1_combout )))) ) ) )

	.dataa(!\i2c|master|WideOr5~0_combout ),
	.datab(!\i2c|master|Equal0~0_combout ),
	.datac(!\i2c|master|Equal0~1_combout ),
	.datad(!\i2c|master|Add0~1_sumout ),
	.datae(!\i2c|master|Selector18~0_combout ),
	.dataf(!\i2c|master|Selector18~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|Selector18~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Selector18~2 .extended_lut = "off";
defparam \i2c|master|Selector18~2 .lut_mask = 64'hAAFEFFFFAAAAFFFF;
defparam \i2c|master|Selector18~2 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|count[0] (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|Selector18~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\sr_latch_n|output_Q~combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|count [0]),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|count[0] .is_wysiwyg = "true";
defparam \i2c|master|count[0] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Equal0~0 (
// Equation(s):
// \i2c|master|Equal0~0_combout  = ( !\i2c|master|count [4] & ( !\i2c|master|count [5] & ( (!\i2c|master|count [0] & (!\i2c|master|count [1] & (!\i2c|master|count [2] & !\i2c|master|count [3]))) ) ) )

	.dataa(!\i2c|master|count [0]),
	.datab(!\i2c|master|count [1]),
	.datac(!\i2c|master|count [2]),
	.datad(!\i2c|master|count [3]),
	.datae(!\i2c|master|count [4]),
	.dataf(!\i2c|master|count [5]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|Equal0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Equal0~0 .extended_lut = "off";
defparam \i2c|master|Equal0~0 .lut_mask = 64'h8000000000000000;
defparam \i2c|master|Equal0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Selector2~0 (
// Equation(s):
// \i2c|master|Selector2~0_combout  = ((\i2c|master|state.STATE_ADDR~q  & ((!\i2c|master|Equal0~0_combout ) # (!\i2c|master|Equal0~1_combout )))) # (\i2c|master|state.STATE_START~q )

	.dataa(!\i2c|master|state.STATE_START~q ),
	.datab(!\i2c|master|state.STATE_ADDR~q ),
	.datac(!\i2c|master|Equal0~0_combout ),
	.datad(!\i2c|master|Equal0~1_combout ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|Selector2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Selector2~0 .extended_lut = "off";
defparam \i2c|master|Selector2~0 .lut_mask = 64'h7775777577757775;
defparam \i2c|master|Selector2~0 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|state.STATE_ADDR (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|Selector2~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\sr_latch_n|output_Q~combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|state.STATE_ADDR~q ),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|state.STATE_ADDR .is_wysiwyg = "true";
defparam \i2c|master|state.STATE_ADDR .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|state~28 (
// Equation(s):
// \i2c|master|state~28_combout  = (!\sr_latch_n|output_Q~combout  & (\i2c|master|state.STATE_ADDR~q  & (\i2c|master|Equal0~0_combout  & \i2c|master|Equal0~1_combout )))

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(!\i2c|master|state.STATE_ADDR~q ),
	.datac(!\i2c|master|Equal0~0_combout ),
	.datad(!\i2c|master|Equal0~1_combout ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|state~28_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|state~28 .extended_lut = "off";
defparam \i2c|master|state~28 .lut_mask = 64'h0002000200020002;
defparam \i2c|master|state~28 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|state.STATE_WACK (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|state~28_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|state.STATE_WACK~q ),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|state.STATE_WACK .is_wysiwyg = "true";
defparam \i2c|master|state.STATE_WACK .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Selector5~0 (
// Equation(s):
// \i2c|master|Selector5~0_combout  = ((\i2c|master|state.STATE_REG_ADDR~q  & ((!\i2c|master|Equal0~0_combout ) # (!\i2c|master|Equal0~1_combout )))) # (\i2c|master|state.STATE_WACK~q )

	.dataa(!\i2c|master|state.STATE_REG_ADDR~q ),
	.datab(!\i2c|master|state.STATE_WACK~q ),
	.datac(!\i2c|master|Equal0~0_combout ),
	.datad(!\i2c|master|Equal0~1_combout ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|Selector5~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Selector5~0 .extended_lut = "off";
defparam \i2c|master|Selector5~0 .lut_mask = 64'h7773777377737773;
defparam \i2c|master|Selector5~0 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|state.STATE_REG_ADDR (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|Selector5~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\sr_latch_n|output_Q~combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|state.STATE_REG_ADDR~q ),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|state.STATE_REG_ADDR .is_wysiwyg = "true";
defparam \i2c|master|state.STATE_REG_ADDR .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|state~24 (
// Equation(s):
// \i2c|master|state~24_combout  = (!\sr_latch_n|output_Q~combout  & (\i2c|master|state.STATE_REG_ADDR~q  & (\i2c|master|Equal0~0_combout  & \i2c|master|Equal0~1_combout )))

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(!\i2c|master|state.STATE_REG_ADDR~q ),
	.datac(!\i2c|master|Equal0~0_combout ),
	.datad(!\i2c|master|Equal0~1_combout ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|state~24_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|state~24 .extended_lut = "off";
defparam \i2c|master|state~24 .lut_mask = 64'h0002000200020002;
defparam \i2c|master|state~24 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|state.STATE_WACK2 (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|state~24_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|state.STATE_WACK2~q ),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|state.STATE_WACK2 .is_wysiwyg = "true";
defparam \i2c|master|state.STATE_WACK2 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Selector8~0 (
// Equation(s):
// \i2c|master|Selector8~0_combout  = ((\i2c|master|state.STATE_DATA~q  & ((!\i2c|master|Equal0~0_combout ) # (!\i2c|master|Equal0~1_combout )))) # (\i2c|master|state.STATE_WACK2~q )

	.dataa(!\i2c|master|state.STATE_WACK2~q ),
	.datab(!\i2c|master|state.STATE_DATA~q ),
	.datac(!\i2c|master|Equal0~0_combout ),
	.datad(!\i2c|master|Equal0~1_combout ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|Selector8~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Selector8~0 .extended_lut = "off";
defparam \i2c|master|Selector8~0 .lut_mask = 64'h7775777577757775;
defparam \i2c|master|Selector8~0 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|state.STATE_DATA (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|Selector8~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\sr_latch_n|output_Q~combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|state.STATE_DATA~q ),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|state.STATE_DATA .is_wysiwyg = "true";
defparam \i2c|master|state.STATE_DATA .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|state~25 (
// Equation(s):
// \i2c|master|state~25_combout  = (!\sr_latch_n|output_Q~combout  & (\i2c|master|state.STATE_DATA~q  & (\i2c|master|Equal0~0_combout  & \i2c|master|Equal0~1_combout )))

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(!\i2c|master|state.STATE_DATA~q ),
	.datac(!\i2c|master|Equal0~0_combout ),
	.datad(!\i2c|master|Equal0~1_combout ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|state~25_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|state~25 .extended_lut = "off";
defparam \i2c|master|state~25 .lut_mask = 64'h0002000200020002;
defparam \i2c|master|state~25 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|state.STATE_WACK3 (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|state~25_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|state.STATE_WACK3~q ),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|state.STATE_WACK3 .is_wysiwyg = "true";
defparam \i2c|master|state.STATE_WACK3 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|state~27 (
// Equation(s):
// \i2c|master|state~27_combout  = (!\sr_latch_n|output_Q~combout  & \i2c|master|state.STATE_WACK3~q )

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(!\i2c|master|state.STATE_WACK3~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|state~27_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|state~27 .extended_lut = "off";
defparam \i2c|master|state~27 .lut_mask = 64'h2222222222222222;
defparam \i2c|master|state~27 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|state.STATE_PRE_STOP (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|state~27_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|state.STATE_PRE_STOP~q ),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|state.STATE_PRE_STOP .is_wysiwyg = "true";
defparam \i2c|master|state.STATE_PRE_STOP .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|state~26 (
// Equation(s):
// \i2c|master|state~26_combout  = (!\sr_latch_n|output_Q~combout  & \i2c|master|state.STATE_PRE_STOP~q )

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(!\i2c|master|state.STATE_PRE_STOP~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|state~26_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|state~26 .extended_lut = "off";
defparam \i2c|master|state~26 .lut_mask = 64'h2222222222222222;
defparam \i2c|master|state~26 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|state.STATE_STOP (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|state~26_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|state.STATE_STOP~q ),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|state.STATE_STOP .is_wysiwyg = "true";
defparam \i2c|master|state.STATE_STOP .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|state~22 (
// Equation(s):
// \i2c|master|state~22_combout  = (!\sr_latch_n|output_Q~combout  & (!\i2c|master|state.STATE_STOP~q  & ((\start~q ) # (\i2c|master|state.STATE_IDLE~q ))))

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(!\i2c|master|state.STATE_IDLE~q ),
	.datac(!\i2c|master|state.STATE_STOP~q ),
	.datad(!\start~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|state~22_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|state~22 .extended_lut = "off";
defparam \i2c|master|state~22 .lut_mask = 64'h20A020A020A020A0;
defparam \i2c|master|state~22 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|state.STATE_IDLE (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|state~22_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|state.STATE_IDLE~q ),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|state.STATE_IDLE .is_wysiwyg = "true";
defparam \i2c|master|state.STATE_IDLE .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Selector19~0 (
// Equation(s):
// \i2c|master|Selector19~0_combout  = ( \i2c|master|count [2] & ( (!\i2c|master|count [0] & (((\i2c|master|state.STATE_ADDR~q )))) # (\i2c|master|count [0] & (((\i2c|master|state.STATE_ADDR~q  & !\i2c|master|count [1])) # (\i2c|master|state.STATE_REG_ADDR~q 
// ))) ) ) # ( !\i2c|master|count [2] & ( (!\i2c|master|count [0] & (\i2c|master|state.STATE_REG_ADDR~q )) # (\i2c|master|count [0] & (((\i2c|master|state.STATE_ADDR~q  & !\i2c|master|count [1])))) ) )

	.dataa(!\i2c|master|state.STATE_REG_ADDR~q ),
	.datab(!\i2c|master|state.STATE_ADDR~q ),
	.datac(!\i2c|master|count [0]),
	.datad(!\i2c|master|count [1]),
	.datae(!\i2c|master|count [2]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|Selector19~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Selector19~0 .extended_lut = "off";
defparam \i2c|master|Selector19~0 .lut_mask = 64'h5350373553503735;
defparam \i2c|master|Selector19~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|Selector19~1 (
// Equation(s):
// \i2c|master|Selector19~1_combout  = ( \i2c|master|Selector19~0_combout  ) # ( !\i2c|master|Selector19~0_combout  & ( (!\i2c|master|state.STATE_IDLE~q ) # (((\i2c|master|state.STATE_DATA~q  & !\i2c|master|count [1])) # (\i2c|master|state.STATE_STOP~q )) ) 
// )

	.dataa(!\i2c|master|state.STATE_IDLE~q ),
	.datab(!\i2c|master|state.STATE_STOP~q ),
	.datac(!\i2c|master|state.STATE_DATA~q ),
	.datad(!\i2c|master|count [1]),
	.datae(!\i2c|master|Selector19~0_combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|Selector19~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|Selector19~1 .extended_lut = "off";
defparam \i2c|master|Selector19~1 .lut_mask = 64'hBFBBFFFFBFBBFFFF;
defparam \i2c|master|Selector19~1 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|i2c_sda_val (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|Selector19~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(\sr_latch_n|output_Q~combout ),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|i2c_sda_val~q ),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|i2c_sda_val .is_wysiwyg = "true";
defparam \i2c|master|i2c_sda_val .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|i2c_sda_val~1 (
// Equation(s):
// \i2c|master|i2c_sda_val~1_combout  = (!\sr_latch_n|output_Q~combout  & (((\i2c|master|state.STATE_WACK~q ) # (\i2c|master|state.STATE_WACK3~q )) # (\i2c|master|state.STATE_WACK2~q )))

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(!\i2c|master|state.STATE_WACK2~q ),
	.datac(!\i2c|master|state.STATE_WACK3~q ),
	.datad(!\i2c|master|state.STATE_WACK~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|i2c_sda_val~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|i2c_sda_val~1 .extended_lut = "off";
defparam \i2c|master|i2c_sda_val~1 .lut_mask = 64'h2AAA2AAA2AAA2AAA;
defparam \i2c|master|i2c_sda_val~1 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|i2c_sda_val~en (
	.clk(\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|i2c_sda_val~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|i2c_sda_val~en_q ),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|i2c_sda_val~en .is_wysiwyg = "true";
defparam \i2c|master|i2c_sda_val~en .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \state_out~5 (
// Equation(s):
// \state_out~5_combout  = (!\current_state.STATE_BEGIN~q ) # (\current_state.STATE_STOP~q )

	.dataa(!\current_state.STATE_BEGIN~q ),
	.datab(!\current_state.STATE_STOP~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\state_out~5_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \state_out~5 .extended_lut = "off";
defparam \state_out~5 .lut_mask = 64'hBBBBBBBBBBBBBBBB;
defparam \state_out~5 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \state_out~6 (
// Equation(s):
// \state_out~6_combout  = (\current_state.STATE_IDLE~q ) # (\current_state.STATE_STOP~q )

	.dataa(!\current_state.STATE_STOP~q ),
	.datab(!\current_state.STATE_IDLE~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\state_out~6_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \state_out~6 .extended_lut = "off";
defparam \state_out~6 .lut_mask = 64'h7777777777777777;
defparam \state_out~6 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \state_out~7 (
// Equation(s):
// \state_out~7_combout  = (\current_state.STATE_WRITE~q ) # (\current_state.STATE_STOP~q )

	.dataa(!\current_state.STATE_STOP~q ),
	.datab(!\current_state.STATE_WRITE~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\state_out~7_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \state_out~7 .extended_lut = "off";
defparam \state_out~7 .lut_mask = 64'h7777777777777777;
defparam \state_out~7 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \state_out~8 (
// Equation(s):
// \state_out~8_combout  = (\current_state.STATE_CHECK~q ) # (\current_state.STATE_STOP~q )

	.dataa(!\current_state.STATE_STOP~q ),
	.datab(!\current_state.STATE_CHECK~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\state_out~8_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \state_out~8 .extended_lut = "off";
defparam \state_out~8 .lut_mask = 64'h7777777777777777;
defparam \state_out~8 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \clk_divider|i2c_clk~0 (
// Equation(s):
// \clk_divider|i2c_clk~0_combout  = (!\clk_divider|i2c_clk~q  & !\sr_latch_n|output_Q~combout )

	.dataa(!\clk_divider|i2c_clk~q ),
	.datab(!\sr_latch_n|output_Q~combout ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\clk_divider|i2c_clk~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \clk_divider|i2c_clk~0 .extended_lut = "off";
defparam \clk_divider|i2c_clk~0 .lut_mask = 64'h8888888888888888;
defparam \clk_divider|i2c_clk~0 .shared_arith = "off";
// synopsys translate_on

dffeas \clk_divider|i2c_clk (
	.clk(\clk_ref~input_o ),
	.d(\clk_divider|i2c_clk~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\i2c|clk_divider|i2c_clk~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_divider|i2c_clk~q ),
	.prn(vcc));
// synopsys translate_off
defparam \clk_divider|i2c_clk .is_wysiwyg = "true";
defparam \clk_divider|i2c_clk .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|state~21 (
// Equation(s):
// \i2c|master|state~21_combout  = (!\sr_latch_n|output_Q~combout  & !\i2c|master|state.STATE_IDLE~q )

	.dataa(!\sr_latch_n|output_Q~combout ),
	.datab(!\i2c|master|state.STATE_IDLE~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|state~21_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|state~21 .extended_lut = "off";
defparam \i2c|master|state~21 .lut_mask = 64'h8888888888888888;
defparam \i2c|master|state~21 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|WideOr3 (
// Equation(s):
// \i2c|master|WideOr3~combout  = (((\i2c|master|state.STATE_REG_ADDR~q ) # (\i2c|master|state.STATE_WACK3~q )) # (\i2c|master|state.STATE_WACK2~q )) # (\i2c|master|state.STATE_START~q )

	.dataa(!\i2c|master|state.STATE_START~q ),
	.datab(!\i2c|master|state.STATE_WACK2~q ),
	.datac(!\i2c|master|state.STATE_WACK3~q ),
	.datad(!\i2c|master|state.STATE_REG_ADDR~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|WideOr3~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|WideOr3 .extended_lut = "off";
defparam \i2c|master|WideOr3 .lut_mask = 64'h7FFF7FFF7FFF7FFF;
defparam \i2c|master|WideOr3 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|WideOr2 (
// Equation(s):
// \i2c|master|WideOr2~combout  = (((\i2c|master|state.STATE_PRE_STOP~q ) # (\i2c|master|state.STATE_STOP~q )) # (\i2c|master|state.STATE_ADDR~q )) # (\i2c|master|state.STATE_WACK2~q )

	.dataa(!\i2c|master|state.STATE_WACK2~q ),
	.datab(!\i2c|master|state.STATE_ADDR~q ),
	.datac(!\i2c|master|state.STATE_STOP~q ),
	.datad(!\i2c|master|state.STATE_PRE_STOP~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|WideOr2~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|WideOr2 .extended_lut = "off";
defparam \i2c|master|WideOr2 .lut_mask = 64'h7FFF7FFF7FFF7FFF;
defparam \i2c|master|WideOr2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|WideOr1 (
// Equation(s):
// \i2c|master|WideOr1~combout  = (((\i2c|master|state.STATE_WACK~q ) # (\i2c|master|state.STATE_STOP~q )) # (\i2c|master|state.STATE_REG_ADDR~q )) # (\i2c|master|state.STATE_WACK2~q )

	.dataa(!\i2c|master|state.STATE_WACK2~q ),
	.datab(!\i2c|master|state.STATE_REG_ADDR~q ),
	.datac(!\i2c|master|state.STATE_STOP~q ),
	.datad(!\i2c|master|state.STATE_WACK~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|WideOr1~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|WideOr1 .extended_lut = "off";
defparam \i2c|master|WideOr1 .lut_mask = 64'h7FFF7FFF7FFF7FFF;
defparam \i2c|master|WideOr1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|WideOr0 (
// Equation(s):
// \i2c|master|WideOr0~combout  = ((\i2c|master|state.STATE_DATA~q ) # (\i2c|master|state.STATE_PRE_STOP~q )) # (\i2c|master|state.STATE_WACK3~q )

	.dataa(!\i2c|master|state.STATE_WACK3~q ),
	.datab(!\i2c|master|state.STATE_PRE_STOP~q ),
	.datac(!\i2c|master|state.STATE_DATA~q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|WideOr0~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|WideOr0 .extended_lut = "off";
defparam \i2c|master|WideOr0 .lut_mask = 64'h7F7F7F7F7F7F7F7F;
defparam \i2c|master|WideOr0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|always0~0 (
// Equation(s):
// \i2c|master|always0~0_combout  = (\i2c|master|state.STATE_IDLE~q  & (!\i2c|master|state.STATE_START~q  & (!\i2c|master|state.STATE_STOP~q  & !\i2c|master|state.STATE_PRE_STOP~q )))

	.dataa(!\i2c|master|state.STATE_IDLE~q ),
	.datab(!\i2c|master|state.STATE_START~q ),
	.datac(!\i2c|master|state.STATE_STOP~q ),
	.datad(!\i2c|master|state.STATE_PRE_STOP~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|always0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|always0~0 .extended_lut = "off";
defparam \i2c|master|always0~0 .lut_mask = 64'h4000400040004000;
defparam \i2c|master|always0~0 .shared_arith = "off";
// synopsys translate_on

dffeas \i2c|master|i2c_scl_enable (
	.clk(!\i2c|clk_divider|i2c_clk~q ),
	.d(\i2c|master|always0~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(\sr_latch_n|output_Q~combout ),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\i2c|master|i2c_scl_enable~q ),
	.prn(vcc));
// synopsys translate_off
defparam \i2c|master|i2c_scl_enable .is_wysiwyg = "true";
defparam \i2c|master|i2c_scl_enable .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \i2c|master|i2c_scl~0 (
// Equation(s):
// \i2c|master|i2c_scl~0_combout  = (!\i2c|clk_divider|i2c_clk~q ) # (!\i2c|master|i2c_scl_enable~q )

	.dataa(!\i2c|clk_divider|i2c_clk~q ),
	.datab(!\i2c|master|i2c_scl_enable~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\i2c|master|i2c_scl~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \i2c|master|i2c_scl~0 .extended_lut = "off";
defparam \i2c|master|i2c_scl~0 .lut_mask = 64'hEEEEEEEEEEEEEEEE;
defparam \i2c|master|i2c_scl~0 .shared_arith = "off";
// synopsys translate_on

endmodule
